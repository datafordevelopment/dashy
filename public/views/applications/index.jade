extends ../layout

block content
  #apps
    header.clearfix
      .select.pull-left
        a(href="javascript:;", ng-click="open = !open", ng-class="{'active': open}")
          {{activeApp.name}}
          i.glyphicon.glyphicon-chevron-right
        ul.options(ng-show="open")
          li(ng-repeat="app in apps")
            a(href="javascript:;", ng-click="$parent.activeApp = app; $parent.open = false") {{app.name}}

      span.key.form-inline App ID:&nbsp;
        input(type="text", value="{{activeApp.key}}", disabled).form-control


    .row
      .col-sm-2.environments
        a(href="javascript:;", ng-repeat="(env, data) in activeApp.requests", active-env="{{env}}") {{env}}

      .col-sm-10.requests
        p(ng-show="!activeApp.requests") No requests sent to {{activeApp.name}} yet

        ul(ng-show="activeApp.requests")
          li.request(ng-repeat="(endpoint, requests) in activeApp.requests[activeEnv]", endpoint="{{activeEnv}}_{{endpoint}}")
            <h4>{{endpoint}}</h4>
            ul
              li(ng-repeat="r in requests | orderBy:'-date' | limitTo: 5 track by $index")
                span(ng-class="{'success': r.success, 'fail': !r.success}") &nbsp;
                span(time-ago="{{r.date}}") {{r.date | timeAgo}}



block js
  script.
    angular.module('app')
    .run(function ($rootScope) {
      $rootScope.apps = !{JSON.stringify(apps)};
      $rootScope.activeApp = $rootScope.apps[0];

      if($rootScope.activeApp.requests) {
        $rootScope.activeEnv = Object.keys($rootScope.activeApp.requests)[0];
      }

      var socket = io.connect('http://localhost:3000/');
      socket.on('newRequest', function (data) {
        $rootScope.$apply(function () {
          for(var i in $rootScope.apps) {
            if($rootScope.apps[i].name === data.appName) {
              if(data.appName === $rootScope.activeApp.name) {
                $rootScope.activeApp.requests = $rootScope.activeApp.requests || {};
                $rootScope.activeApp.requests[data.environment] = $rootScope.activeApp.requests[data.environment] || {};
                $rootScope.activeApp.requests[data.environment][data.endpoint] = $rootScope.activeApp.requests[data.environment][data.endpoint] || [];
                $rootScope.activeApp.requests[data.environment][data.endpoint].push(data.request);

                if(!$rootScope.activeEnv) {
                  $rootScope.activeEnv = data.environment;
                }
              }
              else {
                $rootScope.apps[i].requests = $rootScope.apps[i].requests || {};
                $rootScope.apps[i].requests[data.environment] = $rootScope.apps[i].requests[data.environment] || {};
                $rootScope.apps[i].requests[data.environment][data.endpoint] = $rootScope.apps[i].requests[data.environment][data.endpoint] || [];
                $rootScope.apps[i].requests[data.environment][data.endpoint].push(data.request);
              }

              break;
            }
          }
        });

        var el = $('[endpoint="' + data.environment + '_' + data.endpoint + '"] li:first');
        el.addClass('spawned');
        setTimeout(function () {
          el.removeClass('spawned');
        }, 1000);
      });
    });
